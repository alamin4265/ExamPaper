@model ExamPaper.Models.EnglishQuestionBank

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>EnglishQuestionBank</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row" style="padding: 15px">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label", @style = "float:left" })
            <div class="col-md-12">
                <div class="form-group">
                    @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control", @rows = "5", @onchange = "CheckEnglishOnly(this);" } })
                    @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label("Option A", htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align:left" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OptionA, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionA, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label("Option B", htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align:left" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OptionB, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionB, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label("Option C", htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align:left" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OptionC, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionC, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.Label("Option D", htmlAttributes: new { @class = "control-label col-md-12", @style = "text-align:left" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.OptionD, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OptionD, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div><br />


        <div class="row">
            <div class="col-md-1">
                <label> Answer :</label>
            </div>
            <div class="col-md-6">
                <div class="col-md-3">
                    <div class="form-group">
                        Option A &nbsp; @Html.RadioButtonFor(model => model.Answer, "A", new { @checked = false })


                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        Option B &nbsp; @Html.RadioButtonFor(model => model.Answer, "B", new { @checked = false })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        Option C &nbsp; @Html.RadioButtonFor(model => model.Answer, "C", new { @checked = false })

                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        Option D &nbsp; @Html.RadioButtonFor(model => model.Answer, "D", new { @checked = false })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
                <input type="submit" value="Create" class="btn btn-default" style="float: right" />
            </div>
        </div>
    </div>





    @*<div class="form-group">
            @Html.LabelFor(model => model.Verified, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Verified, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Verified, "", new { @class = "text-danger" })
            </div>
        </div>*@


    @*<div class="form-group">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <Select name="Answer" id="Answer" class="form-control">
                    <option value="1">Option A</option>
                    <option value="2">Option B</option>
                    <option value="3">Option C</option>
                    <option value="4">Option D</option>
                </Select>
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.Approve, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Approve, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Approve, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.CategoyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoyId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoyId, "", new { @class = "text-danger" })
            </div>
        </div>*@


    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section EnglistQuestionCreate{
<script type="text/javascript">

        function CheckEnglishOnly(field) {
            var sNewVal = "";
            var sFieldVal = field.value;

            for (var i = 0; i < sFieldVal.length; i++) {

                var ch = sFieldVal.charAt(i);

                var c = ch.charCodeAt(0);

                if (c < 0 || c > 255) {
                    // Discard
                }
                else {
                    sNewVal += ch;
                }
            }

            field.value = sNewVal;
        }
</script>
}